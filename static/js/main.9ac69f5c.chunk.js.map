{"version":3,"sources":["localStorage.js","App.js","index.js"],"names":["key","value","localStorage","setItem","JSON","stringify","err","contacts","getItem","parse","styles","app","textAlign","container","display","border","padding","button","color","label","fontSize","fontWeight","ul","listStyleType","li","marginBottom","span","marginRight","contactsReducer","state","action","type","payload","contact","filter","id","contactId","ReactDOM","render","useState","name","setName","number","setNumber","useReducer","dispatch","isRepeatsName","some","isRepeatsPhone","setFilter","filteredContacts","useMemo","includes","useEffect","savedContacts","storage","className","style","onChange","evt","target","placeholder","onClick","alert","shortid","generate","map","document","getElementById"],"mappings":"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","file":"static/js/main.9ac69f5c.chunk.js","sourcesContent":["const set = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n    return null;\n  } catch (err) {\n    return null;\n  }\n};\n\nconst get = key => {\n  try {\n    const contacts = localStorage.getItem(key);\n    return contacts ? JSON.parse(contacts) : null;\n  } catch (err) {\n    return null;\n  }\n};\n\nexport default {\n  set,\n  get,\n};\n","import React, { useState, useReducer, useMemo, useEffect } from 'react';\nimport storage from './localStorage';\nimport shortid from 'short-id';\n\nconst styles = {\n  app: {\n    textAlign: 'center',\n  },\n  container: {\n    display: 'inline-block',\n    border: '1px solid black',\n    padding: '10px',\n  },\n  button: {\n    color: '#F21D41',\n  },\n  label: {\n    color: '#212121',\n    fontSize: '20px',\n    fontWeight: 'bold',\n  },\n  ul: {\n    listStyleType: 'none',\n    color: '#000',\n  },\n  li: {\n    color: '#212121',\n    fontSize: '18px',\n    fontWeight: 'bold',\n    marginBottom: '10px',\n  },\n  span: {\n    marginRight: '15px',\n  },\n};\n\nconst contactsReducer = (state, action) => {\n  switch (action.type) {\n    case 'addContact':\n      return [...state, action.payload.contact];\n\n    case 'removeContact':\n      return state.filter(contact => contact.id !== action.payload.contactId);\n\n    case 'initContact':\n      return action.payload.contacts;\n\n    default:\n      return state;\n  }\n};\n\nexport default function App() {\n  // name\n  const [name, setName] = useState('');\n  const updateName = evt => {\n    setName(evt.target.value);\n  };\n\n  // number\n  const [number, setNumber] = useState('');\n  const updateNumber = evt => {\n    setNumber(evt.target.value);\n  };\n\n  // contacts\n  const [contacts, dispatch] = useReducer(contactsReducer, []);\n\n  const addContact = evt => {\n    if (isRepeatsName()) {\n      alert('name reserved');\n      return;\n    }\n    if (isRepeatsPhone()) {\n      alert('phone reserved');\n      return;\n    }\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    dispatch({ type: 'addContact', payload: { contact } });\n    setName('');\n    setNumber('');\n  };\n  const removeContact = contactId => {\n    dispatch({ type: 'removeContact', payload: { contactId } });\n  };\n  const isRepeatsName = () => {\n    return contacts.some(contact => contact.name === name);\n  };\n  const isRepeatsPhone = () => {\n    return contacts.some(contact => contact.number === number);\n  };\n\n  // filter\n  const [filter, setFilter] = useState('');\n  const changeFilter = evt => {\n    setFilter(evt.target.value);\n  };\n  const filteredContacts = useMemo(() => {\n    return contacts.filter(contact => contact.name.includes(filter));\n  }, [contacts, filter]);\n\n  // loading contacts\n  useEffect(() => {\n    const savedContacts = storage.get('contacts');\n    if (savedContacts) {\n      const contacts = savedContacts.contacts;\n      dispatch({ type: 'initContact', payload: { contacts } });\n    }\n  }, []);\n\n  // save contacts\n  useEffect(() => {\n    storage.set('contacts', { contacts });\n  }, [contacts]);\n\n  return (\n    <div className=\"App\" style={styles.app}>\n      <div style={styles.container}>\n        <label style={styles.label}>Name</label>\n        <br />\n        <input type=\"text\" value={name} onChange={updateName} />\n        <br />\n        <label style={styles.label}>Number</label>\n        <br />\n        <input\n          type=\"tel\"\n          placeholder=\"111-111-111\"\n          value={number}\n          onChange={updateNumber}\n        />\n        <br />\n        <br />\n        <button type=\"button\" onClick={addContact}>\n          Add contact\n        </button>\n      </div>\n      <br />\n      <br />\n      <label style={styles.label}>Find contacts by name</label>\n      <br />\n      <input type=\"text\" onChange={changeFilter} value={filter} />\n      <br />\n      <ul style={styles.ul}>\n        {filteredContacts.map(contact => (\n          <li key={contact.id} style={styles.li}>\n            <span\n              style={styles.span}\n            >{`Name: ${contact.name} Number: ${contact.number}`}</span>\n            <button onClick={() => removeContact(contact.id)}>Remove</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}